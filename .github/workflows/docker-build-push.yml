# Generated by cue/workflows_tool.cue; do not edit
name: Build, push and deploy the Docker image
"on":
  push:
    branches:
      - main
    paths:
      - '**.go'
      - go.mod
      - go.sum
  workflow_dispatch: {}
jobs:
  build:
    name: Build, push and deploy the Docker image
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - name: Login to Docker Hub
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838
        with:
          aws-region: eu-north-1
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
      - id: ecr-login
        name: Login to ECR using OIDC
        uses: aws-actions/amazon-ecr-login@9149ade017c57f86dea2f76a01f8b2d5bd06b10f
      - id: docker-meta
        name: Extract metadata (tags, labels) from Git reference and GitHub events
        uses: docker/metadata-action@69f6fc9d46f2f8bf0d5491e4aabe0bb8c6a4678a
        with:
          images: |-
            staticaland/snippetbox
            ${{ steps.ecr-login.outputs.registry }}/machinarium
          tags: |-
            type=sha,format=long
            type=sha,prefix=
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6
      - name: Build and push (if enabled) Docker image to Docker Hub and AWS
        uses: docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94
        with:
          context: .
          file: Dockerfile.multistage
          load: true
          push: false
          tags: ${{ steps.docker-meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Run the Docker image
        run: docker run --rm ${{ fromJSON(steps.docker-meta.outputs.json).tags[0] }}
permissions:
  contents: read
